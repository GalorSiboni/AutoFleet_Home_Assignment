{"version":3,"sources":["http-common.js","Services/locationService.js","autofleet.gif","Components/HomePage.js","Components/MapComp.js","Actions/index.js","App.js","reportWebVitals.js","Reducers/allLocations.js","Reducers/idArrayInsidePolygone.js","Reducers/index.js","index.js"],"names":["axios","create","baseURL","headers","common","http","get","Polygon","post","HomePage","history","useHistory","className","src","logo","alt","onClick","push","style","paddingTop","Button","variant","size","to","CarComponent","text","MapComp","dispatch","useDispatch","defaultProps","center","lat","useSelector","state","allLocations","location","lng","zoom","useState","polygonCoords","setPolygonCoords","handleApiLoaded","map","maps","polygon","latLngArray","Object","keys","forEach","key","locationService","then","response","type","payload","data","catch","e","console","error","message","getIdArray","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setMap","Grid","container","item","xs","height","width","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","car","id","log","idArrayInsidePolygon","length","App","useEffect","getData","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","allLocationsReducer","action","idArrayInsidePolygonReducer","allReducers","combineReducers","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.117fbf9a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://nodejs-autofleet-server.herokuapp.com/api\",\r\n    headers: {\r\n        \"Accept\": \"application/json\", \"Content-type\": \"application/json\", 'Access-Control-Allow-Origin': '*',\r\n        common:{'Authorization': 'Bearer'}\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAllLocations = () => {\r\n    return http.get(`/locations`);\r\n};\r\n\r\nconst getIdArrayInsidePolygon = (Polygon) => {\r\n    return http.post(`/getAllIdsInsidePolygon`, Polygon);\r\n}\r\n\r\nexport default {\r\n    getAllLocations,\r\n    getIdArrayInsidePolygon\r\n};","export default __webpack_public_path__ + \"static/media/autofleet.581abd35.gif\";","import React from 'react';\r\nimport logo from '../autofleet.gif';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n    const history = useHistory();\r\n    \r\n    function handleClick() {\r\n        history.push('/map');\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"autofleet-logo\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" onClick={handleClick}/>\r\n            <div>\r\n            <p style={ {paddingTop: '50px'}}>\r\n                Welcome to the vehicle map of the city London!\r\n            </p>\r\n            <div className=\"d-grid gap-2\">\r\n            </div>\r\n            <Button variant=\"primary\" size=\"lg\">\r\n            <Link to=\"/map\">Enter Map </Link> \r\n            </Button>\r\n            </div> \r\n            </header>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage;\r\n","import React, {useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport locationService from '../Services/locationService';\r\nimport { setIdArrayInsideCurrentPolygon } from '../Actions';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst CarComponent = ({ text }) => <div>{text}</div>;\r\n\r\n\r\nconst MapComp = () => {\r\n    const dispatch = useDispatch();\r\n    const defaultProps = {\r\n        center: {\r\n            lat: useSelector(state => state.allLocations)[0].location.lat,\r\n            lng: useSelector(state => state.allLocations)[0].location.lng\r\n        },\r\n        zoom: 11\r\n    }\r\n    //set here the polygon you want to draw on the map\r\n    const [polygonCoords, setPolygonCoords] = useState(\r\n        [ \r\n            { lat: 51.509865, lng: -0.118092 },\r\n            { lat: 51.418278, lng: -0.237845 },\r\n            { lat: 51.410976, lng: -0.20755833 },\r\n            { lat: 51.4514312744, lng: -0.0712783337 }\r\n        ]);\r\n    const handleApiLoaded = (map, maps) => {\r\n        getIdArray(polygonCoords, dispatch);\r\n        var somePolygon = new maps.Polygon({\r\n            paths: polygonCoords,\r\n            key: 1,\r\n            strokeColor: \"#FF0000\",\r\n            strokeOpacity: 0.8,\r\n            strokeWeight: 2,\r\n            fillColor: \"#FF0000\",\r\n            fillOpacity: 0.35\r\n        });\r\n        somePolygon.setMap(map);\r\n    }\r\n    const handlePolygonCoordSwap= () => {\r\n        console.log(polygonCoords)\r\n        setPolygonCoords( \r\n            { lat: 51.5456123352, lng: -0.0912433416 },\r\n            { lat: 51.4598884583, lng: -0.1210350022 },\r\n            { lat: 51.4746818542, lng: -0.0307649989 },\r\n            { lat: 51.4514312744, lng: -0.0712783337 }\r\n        );\r\n        console.log(polygonCoords)\r\n    }\r\n    return(\r\n        <Grid container>\r\n            <Grid item xs={9}>\r\n                <div style={{ height: '100vh', width: '100%' }}>\r\n                    <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyB6eO2w0PoRiDYrWa7BtJFx5Hf2GcmNqTE' }}\r\n                    defaultCenter={defaultProps.center}\r\n                    defaultZoom={defaultProps.zoom}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) =>  handleApiLoaded(map, maps)}\r\n                    >\r\n                    {useSelector(state => state.allLocations).map((car) => (  \r\n                        <CarComponent key={car.id}\r\n                            lat={car.location.lat}\r\n                            lng={car.location.lng}\r\n                            text={\"*\"}/> //Car\r\n                    ))}\r\n                    </GoogleMapReact>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <div>\r\n                    <div>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={handlePolygonCoordSwap}>\r\n                            Swap Polygon Coordinates\r\n                        </Button>\r\n                    </div>\r\n                    <ul>\r\n                        <h5>\r\n                        {\"There is \" + useSelector(state => state.idArrayInsidePolygon).length + \" cars inside the Polygon, Here is there Id's:\"}\r\n                        </h5>\r\n                        {useSelector(state => state.idArrayInsidePolygon).map((id, key) => {return <li key={key}> {id} </li>})}\r\n                    </ul>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nfunction getIdArray(polygon, dispatch) {\r\n    let latLngArray = []\r\n    // Append a single item\r\n    Object.keys(polygon).forEach(key => latLngArray.push([polygon[key].lat, polygon[key].lng]))\r\n    locationService.getIdArrayInsidePolygon(latLngArray).then(response => {\r\n        dispatch(setIdArrayInsideCurrentPolygon(response.data));\r\n    }).catch(e => {\r\n        console.error(e.message);\r\n    });\r\n    }\r\n\r\nexport default MapComp;\r\n\r\n","export const setAllLocations = (array) => {\r\n    return {\r\n        type: 'SET_ALL_LOCATIONS',\r\n        payload: array\r\n    };\r\n};\r\n\r\nexport const setIdArrayInsideCurrentPolygon = (array) => {\r\n    return {\r\n        type: 'SET_ID_INSIDE_POLYGONE',\r\n        payload: array\r\n    };\r\n};","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setAllLocations } from './Actions';\nimport locationService from './Services/locationService';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from './Components/HomePage';\nimport MapComp from './Components/MapComp';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getData(dispatch);\n  });\n\n  return (\n    <Router>\n        <Switch>\n          <Route path='/map' exact component={ MapComp }/>\n          <Route path='/' exact component={ HomePage }/>\n        </Switch>\n    </Router>\n  );\n  \n}\nfunction getData(dispatch) {\n  locationService.getAllLocations().then(response => {\n    dispatch(setAllLocations(response.data));\n}).catch(e => {\n    console.error(e.message);\n});\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const allLocationsReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_ALL_LOCATIONS':\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default allLocationsReducer;","const idArrayInsidePolygonReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_ID_INSIDE_POLYGONE':\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default idArrayInsidePolygonReducer;","import allLocationsReducer from \"./allLocations\";\r\nimport idArrayInsidePolygonReducer from \"./idArrayInsidePolygone\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    allLocations: allLocationsReducer,\r\n    idArrayInsidePolygon: idArrayInsidePolygonReducer\r\n});\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducer from './Reducers'\n\nconst store = createStore(allReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}